/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitCore
 *    File: $Id: RooFormulaValue.rdl,v 1.2 2001/03/15 23:19:12 verkerke Exp $
 * Authors:
 *   DK, David Kirkby, Stanford University, kirkby@hep.stanford.edu
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu
 * History:
 *   07-Mar-2001 WV Created initial version
 *
 * Copyright (C) 2001 University of California
 *****************************************************************************/
#ifndef ROO_FORMULA_VALUE
#define ROO_FORMULA_VALUE

#include "RooFitCore/RooAbsValue.hh"
#include "RooFitCore/RooFormula.hh"
class RooArgSet ;

class RooFormulaValue : public RooAbsValue {
public:
  // Constructors, assignment etc
  inline RooFormulaValue() { }
  RooFormulaValue(const char *name, const char *title, RooArgSet& dependents);
  RooFormulaValue(const RooFormulaValue& other);
  RooFormulaValue& operator=(RooFormulaValue& other) {} ;
  virtual ~RooFormulaValue();

  // I/O streaming interface (machine readable)
  virtual Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose=kFALSE) {} ;
  virtual void writeToStream(ostream& os, Bool_t compact) {} ;

  // Printing interface (human readable)
  virtual void printToStream(ostream& stream, Option_t* = 0) ;

  // Debugging
  void dumpFormula() { _formula.dump() ; }

protected:
  
  // Function evaluation
  virtual Double_t evaluate() ;

  // Post-processing of server redirection
  virtual Bool_t redirectServersHook(RooArgSet& newServerList, Bool_t mustReplaceAll=kFALSE) ;

  RooFormula _formula ; // Formula engine 

  ClassDef(RooFormulaValue,1) // a real-valued variable and its value
};

#endif
