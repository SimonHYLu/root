/*****************************************************************************
 * Project: RooFit                                                           *
 * Package: RooFitCore                                                       *
 *    File: $Id$
 * Authors:                                                                  *
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu       *
 *   DK, David Kirkby,    UC Irvine,         dkirkby@uci.edu                 *
 *                                                                           *
 * Copyright (c) 2000-2002, Regents of the University of California          *
 *                          and Stanford University. All rights reserved.    *
 *                                                                           *
 * Redistribution and use in source and binary forms,                        *
 * with or without modification, are permitted according to the terms        *
 * listed in LICENSE (http://roofit.sourceforge.net/license.txt)             *
 *****************************************************************************/
#ifndef ROO_INTEGRATOR1D_BINDING
#define ROO_INTEGRATOR1D_BINDING

#include "RooFitCore/RooAbsFunc.hh"
#include "RooFitCore/RooIntegrator1D.hh"

class RooIntegrator1DBinding : public RooAbsFunc {
public:
  RooIntegrator1DBinding(RooIntegrator1D& integrator) : 
    RooAbsFunc(integrator.integrand()->getDimension()-1), _integrator(&integrator) {} ;
  virtual ~RooIntegrator1DBinding() {} ;

  inline virtual Double_t operator()(const Double_t xvector[]) const { return _integrator->integral(xvector) ; }
  inline virtual Double_t getMinLimit(UInt_t index) const { return _integrator->integrand()->getMinLimit(index+1); }
  inline virtual Double_t getMaxLimit(UInt_t index) const { return _integrator->integrand()->getMaxLimit(index+1); }

protected:
  RooIntegrator1D* _integrator ;

  ClassDef(RooIntegrator1DBinding,0) // RooAbsFunc decorator
};

#endif

