/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitCore
 *    File: $Id: RooConvolutedPdf.rdl,v 1.2 2001/06/23 01:20:33 verkerke Exp $
 * Authors:
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu
 * History:
 *   05-Jun-2001 WV Created initial version
 *
 * Copyright (C) 2001 University of California
 *****************************************************************************/
#ifndef ROO_CONVOLUTED_PDF
#define ROO_CONVOLUTED_PDF

#include "RooFitCore/RooAbsPdf.hh"
#include "RooFitCore/RooRealProxy.hh"
#include "RooFitCore/RooSetProxy.hh"
#include "RooFitCore/RooDataSet.hh"

class RooResolutionModel ;
class RooRealVar ;

class RooConvolutedPdf : public RooAbsPdf {
public:

  // Constructors, assignment etc
  inline RooConvolutedPdf() { }
  RooConvolutedPdf(const char *name, const char *title, 
		   const RooResolutionModel& model, 
		   RooRealVar& convVar) ;

  RooConvolutedPdf(const RooConvolutedPdf& other, const char* name=0);
  virtual ~RooConvolutedPdf();

  Int_t declareBasis(const char* expression, const RooArgSet& params) ;
  virtual Double_t evaluate(const RooDataSet* dset) const ;
  virtual void printToStream(ostream& stream, PrintOption opt=Standard, TString indent= "") const ;


  // Analytical integration support
  virtual Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars) const ;
  virtual Double_t analyticalIntegral(Int_t code) const ;
  
  // Coefficient Analytical integration support
  virtual Int_t getCoefAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars) const ;
  virtual Double_t coefAnalyticalIntegral(Int_t coef, Int_t code) const ;

  virtual Bool_t forceAnalyticalInt(const RooAbsArg& dep) const ; 
  
  virtual Double_t coefficient(Int_t basisIndex) const = 0 ;
  void dump(const RooDataSet* dset) const ;
    
protected:

  // Following pointers are only used during 
  // construction and need not to be proxied
  RooResolutionModel* _model   ; // Original resolution model
  RooRealVar* _convVar ;         // Convolution variable

  virtual void syncNormalizationHook(RooAbsReal* norm,const RooDataSet* dset) const ;

  const RooRealVar* convVar() const ;  // Convolution variable 
  RooSetProxy _convSet  ;        // Set of resModel X basisFunc convolution
  RooDataSet _convDummyDataSet ; // Dummy data set for convolution integrations

  ClassDef(RooConvolutedPdf,1) // Abstract Resolution Model
};

#endif
