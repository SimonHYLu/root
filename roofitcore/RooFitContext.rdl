/*****************************************************************************
 * Project: BaBar detector at the SLAC PEP-II B-factory
 * Package: RooFitCore
 *    File: $Id: RooFitContext.rdl,v 1.8 2001/09/08 01:49:41 verkerke Exp $
 * Authors:
 *   DK, David Kirkby, Stanford University, kirkby@hep.stanford.edu
 *   WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu
 * History:
 *   07-Mar-2001 WV Created initial version
 *
 * Copyright (C) 2001 University of California
 *****************************************************************************/

#ifndef ROO_FIT_CONTEXT
#define ROO_FIT_CONTEXT

#include <iostream.h>
#include "TNamed.h"
#include "RooFitCore/RooPrintable.hh"
#include "RooFitCore/RooArgSet.hh"

class RooAbsPdf ;
class RooAbsData ;
class RooAbsArg ;
class RooFitResult ;

class RooFitContext : public TNamed, public RooPrintable {
public:

  // Constructors, assignment etc
  RooFitContext(const RooAbsData* data, const RooAbsPdf* pdf, Bool_t cloneData=kTRUE, Bool_t clonePdf=kTRUE) ;
  virtual ~RooFitContext() ;

  const RooFitResult* fit(Option_t *fitOpt="", Option_t *optOpt="") ;

  inline RooAbsPdf* pdf() const { return _pdfClone; }
  inline RooAbsData* data() const { return _dataClone ; }
  inline Int_t getNPar() const { return _nPar ; }
  inline ofstream* logfile() const { return _logfile ; }
  inline Bool_t extendedMode() const { return _extendedMode ; }
  inline Double_t& maxNLL() { return _maxNLL ; }

  virtual void printToStream(ostream &os, PrintOption opt= Standard, TString indent= "") const ;
  inline virtual void Print(Option_t *options= 0) const {
    printToStream(defaultStream(),parseOptions(options));
  }

  Double_t getVal(Int_t evt) const ;
  virtual Double_t nLogLikelihood(Bool_t dummy=kFALSE) const ;  
  virtual Bool_t optimize(Bool_t doPdf=kTRUE,Bool_t doData=kTRUE, Bool_t doCache=kTRUE) ;

protected:

  // Parameter accessors by ordinal index
  friend class RooSimFitContext ;
  friend void RooFitGlue(Int_t &np, Double_t *gin, Double_t &f, Double_t *par, Int_t flag) ;
  Double_t getPdfParamVal(Int_t index) ;
  Double_t getPdfParamErr(Int_t index) ;	
  virtual Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose=kFALSE) ;
  void setPdfParamErr(Int_t index, Double_t value) ;
  
  
  // Prefit optimizer
  Bool_t findCacheableBranches(RooAbsPdf* pdf, RooAbsData* dset, RooArgSet& cacheList) ;
  void findUnusedDataVariables(RooAbsPdf* pdf,RooAbsData* dset,RooArgSet& pruneList) ;
  void findRedundantCacheServers(RooAbsPdf* pdf,RooAbsData* dset,RooArgSet& cacheList, RooArgSet& pruneList) ;
  Bool_t allClientsCached(RooAbsArg* var, RooArgSet& cacheList) ;

public:

  Bool_t      _ownData ;
  RooAbsData* _dataClone ;
  RooArgSet*  _pdfCompList ;
  RooAbsPdf*  _pdfClone ;
  RooArgSet*  _normSet ;
  RooArgSet*  _floatParamList ;
  RooArgSet*  _constParamList ;
  RooArgSet   _origLeafNodeList ;
  Int_t       _nPar ;

  mutable Bool_t _doOptCache ;
  Double_t _maxNLL ;  
  Bool_t _extendedMode ;
  ofstream* _logfile ;

protected:

  ClassDef(RooFitContext,0) // Transient fit context, combining a dataset and a PDF
} ;

#endif
