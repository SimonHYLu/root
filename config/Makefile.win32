# -*- mode: makefile -*-
#
# Makefile of ROOT for Windows with MS Visual C++ compiler in Cygwin environment

PLATFORM      = win32

DEBUGFLAGS    = -Z7
OPTFLAGS      = -O2 

# Compiler version:
ifeq ($(VC_MAJOR),)
   # Visual Studio 2005 set VS_UNICODE_OUTPUT to redirect the output
   # of cl directly to its log mechanism.
   VC_MAJOR     := $(shell unset VS_UNICODE_OUTPUT ; cl.exe 2>&1 | awk '{ if (NR==1) print $$8 }' | \
                   cut -d'.' -f1)
   VC_MINOR     := $(shell unset VS_UNICODE_OUTPUT ; cl.exe 2>&1 | awk '{ if (NR==1) print $$8 }' | \
                   cut -d'.' -f2)
endif

# these define the build compatibility

ifeq (yes,$(WINRTDEBUG))
  BLDCXXFLAGS = -MDd -GR
  BLDCFLAGS   = -MDd
  BLDF77FLAGS = -MDd
else
  BLDCXXFLAGS = -MD -GR
  BLDCFLAGS   = -MD
  BLDF77FLAGS = -MD
endif

ifeq ($(VC_MAJOR),14)
  BLDCXXFLAGS+= -EHs
  BLDCFLAGS  += -EHs

  ifeq (yes,$(WINRTDEBUG))
    BLDCXXFLAGS += -RTC1
    BLDCFLAGS   += -RTC1
    BLDF77FLAGS += -RTC1
  endif
else
ifeq ($(VC_MINOR),10)
  BLDCXXFLAGS+= -G5 -GX
  BLDCFLAGS  += -G5 -GX
  BLDF77FLAGS+= -G5
else
ifeq ($(VC_MINOR),00)
  BLDCXXFLAGS+= -Zm200
  BLDCFLAGS  += -Zm200
endif
endif
endif

ifeq (debug,$(findstring debug,$(ROOTBUILD)))
OPT           = $(DEBUGFLAGS)
LDOPT         = -debug
F77OPT        = -debug -nopdbfile
PCHDBGLNK4206 = -YlROOT_LNK4206
else
OPT           = $(OPTFLAGS)
LDOPT         =
F77OPT        = -optimize:0 -nopdbfile -recursive 
endif

NOOPT         =

# Compiler:
CXX           = build/win/cxx.sh
CC            = build/win/cc.sh
CXXFLAGS      = -nologo -FIw32pragma.h \
                $(BLDCXXFLAGS) $(EXTRA_CXXFLAGS)
CFLAGS        = -nologo -Ibuild/win -FIw32pragma.h -FIsehmap.h \
                $(BLDCFLAGS) $(EXTRA_CFLAGS)
CINTCXXFLAGS := $(CXXFLAGS)
CINTCFLAGS   := $(CFLAGS)

# Linker:
LD            = build/win/ld.sh
LDFLAGS       = -nologo -ignore:4049,4217,4221 -incremental:no \
                $(LDOPT) $(EXTRA_LDFLAGS) 
SOFLAGS       = -DLL
SOEXT         = dll
EXEEXT        = .exe

# System libraries:
SYSLIBS       = advapi32.lib
XLIBS         =
CILIBS        =
CRYPTLIBS     =

# Fortran:
F77           = build/win/f77.sh
F77FLAGS      = -nologo -4Nportlib $(BLDF77FLAGS) -recursive
F77LD         = $(F77)
F77LDFLAGS    = $(F77FLAGS) $(F77OPT) -link $(LDFLAGS)
F77LIBS       =

# Precompiled headers:
PCHSUPPORTED  := $(ENABLEPCH)
ifeq ($(PCHSUPPORTED),yes)
  PCHFILE      = include/precompile.pch
  CXXFLAGS    += $(PCHDBGLNK4206) 
  PCHCXXFLAGS  = -DUSEPCH -Yuw32pragma.h -Fp$(PCHFILE) 
  PCHEXTRAOBJBUILD = $(CXX) -DUSEPCH $(CXXFLAGSNOPCH) $(OPT) \
        -Ycw32pragma.h $(PCHDBGLNK4206) \
        -Fp$(PCHFILE) -c $(PCHEXTRASRC) -Fo$(PCHEXTRAOBJ)
  LDFLAGS     += $(PCHEXTRAOBJ)
endif

# Extras
